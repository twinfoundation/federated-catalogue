{
	"openapi": "3.1.0",
	"info": {
		"title": "TWIN - Test Endpoints",
		"description": "REST API for TWIN - Test Endpoints.",
		"version": "1.0.0",
		"license": {
			"name": "Apache 2.0 License",
			"url": "https://opensource.org/licenses/Apache-2.0"
		}
	},
	"servers": [
		{
			"url": "https://localhost"
		}
	],
	"tags": [
		{
			"name": "Federated Catalogue",
			"description": "Endpoints to access a Federated Catalogue."
		}
	],
	"paths": {
		"/federated-catalogue/participant-credentials": {
			"post": {
				"operationId": "compliancePresentationRequest",
				"summary": "Present a Compliance Credential",
				"tags": [
					"Federated Catalogue"
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"requestBody": {
					"description": "Register a new Compliance Credential.",
					"required": true,
					"content": {
						"application/jwt": {
							"schema": {
								"$ref": "#/components/schemas/CompliancePresentationRequest"
							},
							"examples": {
								"compliancePresentationRequestExample": {
									"value": "ey..."
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "The rest request ended in created response."
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnprocessableError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/service-offering-credentials": {
			"post": {
				"operationId": "serviceOfferingPresentationRequest",
				"summary": "Present a Service Offering Credential",
				"tags": [
					"Federated Catalogue"
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"requestBody": {
					"description": "Register a new Compliance Credential.",
					"required": true,
					"content": {
						"application/jwt": {
							"schema": {
								"$ref": "#/components/schemas/CompliancePresentationRequest"
							},
							"examples": {
								"serviceOfferingPresentationRequestExample": {
									"value": "ey..."
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "The rest request ended in created response."
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnprocessableError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/data-resource-credentials": {
			"post": {
				"operationId": "dataResourcePresentationRequest",
				"summary": "Present a Data Resource Credential",
				"tags": [
					"Federated Catalogue"
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"requestBody": {
					"description": "Register a new Compliance Credential.",
					"required": true,
					"content": {
						"application/jwt": {
							"schema": {
								"$ref": "#/components/schemas/CompliancePresentationRequest"
							},
							"examples": {
								"dataResourcePresentationRequestExample": {
									"value": "ey..."
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "The rest request ended in created response."
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnprocessableError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/data-space-connector-credentials": {
			"post": {
				"operationId": "dataSpaceConnectorPresentationRequest",
				"summary": "Present a Data Space Connector Credential",
				"tags": [
					"Federated Catalogue"
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"requestBody": {
					"description": "Register a new Compliance Credential.",
					"required": true,
					"content": {
						"application/jwt": {
							"schema": {
								"$ref": "#/components/schemas/CompliancePresentationRequest"
							},
							"examples": {
								"dataSpaceConnectorPresentationRequestExample": {
									"value": "ey..."
								}
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "The rest request ended in created response."
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnprocessableError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/participants": {
			"get": {
				"operationId": "federatedCatalogueListParticipants",
				"summary": "Get a list of the participant entries",
				"tags": [
					"Federated Catalogue"
				],
				"parameters": [
					{
						"name": "id",
						"description": "The participant Id.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "registrationNumber",
						"description": "The legal registration number.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "abc"
					},
					{
						"name": "lrnType",
						"description": "The legal registration number type.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "cursor",
						"description": "The optional cursor to get next chunk.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "pageSize",
						"description": "The maximum number of entities in a page.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number"
						}
					}
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"responses": {
					"200": {
						"description": "Response for participant list query",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParticipantListResponse"
								},
								"examples": {
									"participantListResponseExample": {
										"value": {
											"@context": [
												"https://w3id.org/gaia-x/development",
												"https://schema.org",
												"https://www.w3.org/ns/credentials/v2"
											],
											"entities": [
												{
													"id": "did:iota:xxx",
													"type": "LegalPerson",
													"registrationNumber": {
														"type": "LocalRegistrationNumber",
														"local": "P1234567"
													},
													"legalName": "A Inc.",
													"trustedIssuerId": "did:iota:zzz",
													"legalAddress": {
														"type": "Address",
														"countryCode": "KE"
													},
													"validFrom": "2024-08-01T12:00:00Z",
													"validUntil": "2025-08-01T12:00:00Z",
													"dateCreated": "2024-08-02T13:45:00Z",
													"evidences": [
														"https://credentials.example.org/1234567"
													]
												}
											],
											"cursor": "1"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/participants/{id}": {
			"get": {
				"operationId": "federatedCatalogueGetParticipant",
				"summary": "Get a participant",
				"tags": [
					"Federated Catalogue"
				],
				"parameters": [
					{
						"name": "id",
						"description": "The id of Participant to get.",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple",
						"example": "did:iota:123456"
					}
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"responses": {
					"200": {
						"description": "Response for participant list query",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParticipantEntry"
								},
								"examples": {
									"participantGetResponseExample": {
										"value": {
											"@context": [
												"https://w3id.org/gaia-x/development",
												"https://schema.org",
												"https://www.w3.org/ns/credentials/v2"
											],
											"id": "did:iota:xxx",
											"type": "LegalPerson",
											"registrationNumber": {
												"type": "LocalRegistrationNumber",
												"local": "P1234567"
											},
											"legalName": "A Inc.",
											"trustedIssuerId": "did:iota:zzz",
											"legalAddress": {
												"type": "Address",
												"countryCode": "KE"
											},
											"validFrom": "2024-08-01T12:00:00Z",
											"validUntil": "2025-08-01T12:00:00Z",
											"dateCreated": "2024-08-02T13:45:00Z",
											"evidences": [
												"https://credentials.example.org/1234567"
											]
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/service-offerings": {
			"get": {
				"operationId": "federatedCatalogueListServices",
				"summary": "Get a list of the service entries",
				"tags": [
					"Federated Catalogue"
				],
				"parameters": [
					{
						"name": "id",
						"description": "The Service Offering Id.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "providedBy",
						"description": "The service provider.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "did:iota:1234"
					},
					{
						"name": "cursor",
						"description": "The optional cursor to get next chunk.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "pageSize",
						"description": "The maximum number of entities in a page.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number"
						}
					}
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"responses": {
					"200": {
						"description": "Response for Service Offering list",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceOfferingListResponse"
								},
								"examples": {
									"serviceOfferingListResponseExample": {
										"value": {
											"@context": [
												"https://w3id.org/gaia-x/development",
												"https://schema.org",
												"https://www.w3.org/ns/credentials/v2"
											],
											"entities": [
												{
													"id": "http://example.org/is123456",
													"name": "Service 1",
													"type": "ServiceOffering",
													"servicePolicy": {},
													"endpoint": {
														"type": "Endpoint",
														"endpointURL": "https://endpoint.example.org/api"
													},
													"providedBy": "did:iota:1234567",
													"validFrom": "2024-08-01T12:00:00Z",
													"validUntil": "2025-08-01T12:00:00Z",
													"dateCreated": "2024-08-02T13:45:00Z",
													"evidences": [
														"https://credentials.example.org/1234567"
													]
												}
											],
											"cursor": "1"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/data-resources": {
			"get": {
				"operationId": "federatedCatalogueListResources",
				"summary": "Get a list of the data resource entries",
				"tags": [
					"Federated Catalogue"
				],
				"parameters": [
					{
						"name": "id",
						"description": "The Id of the Data Resource.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "producedBy",
						"description": "The service provider.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "did:iota:1234"
					},
					{
						"name": "cursor",
						"description": "The optional cursor to get next chunk.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "pageSize",
						"description": "The maximum number of entities in a page.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number"
						}
					}
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"responses": {
					"200": {
						"description": "Response fo data resource list.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DataResourceListResponse"
								},
								"examples": {
									"dataResourceListResponseExample": {
										"value": {
											"@context": [
												"https://w3id.org/gaia-x/development",
												"https://schema.org",
												"https://www.w3.org/ns/credentials/v2"
											],
											"entities": [
												{
													"id": "http://example.org/is123456",
													"name": "Data Resource 1",
													"type": "DataResource",
													"copyrightOwnedBy": "did:iota:1234",
													"license": "http://licenses.example.org/12345",
													"resourcePolicy": {},
													"exposedThrough": {
														"@id": "https://endpoint.example.org/api",
														"type": "DataExchangeComponent"
													},
													"producedBy": "did:iota:1234567",
													"trustedIssuerId": "did:iota:987654",
													"validFrom": "2024-08-01T12:00:00Z",
													"validUntil": "2025-08-01T12:00:00Z",
													"dateCreated": "2024-08-02T13:45:00Z",
													"evidences": [
														"https://credentials.example.org/1234567"
													]
												}
											],
											"cursor": "1"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/federated-catalogue/data-space-connectors": {
			"get": {
				"operationId": "federatedCatalogueListDataSpaceConnectors",
				"summary": "Get a list of the Data Space connectors entries",
				"tags": [
					"Federated Catalogue"
				],
				"parameters": [
					{
						"name": "id",
						"description": "The id of the Data Space Connector.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "maintainedBy",
						"description": "The maintainer",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						},
						"example": "did:iota:1234"
					},
					{
						"name": "cursor",
						"description": "The optional cursor to get next chunk.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "pageSize",
						"description": "The maximum number of entities in a page.",
						"in": "query",
						"required": false,
						"schema": {
							"type": "number"
						}
					}
				],
				"security": [
					{
						"jwtBearerAuthScheme": []
					}
				],
				"responses": {
					"200": {
						"description": "Response for Data Space Connector list",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DataSpaceConnectorListResponse"
								},
								"examples": {
									"dataSpaceConnectorListResponseExample": {
										"value": {
											"@context": [
												"https://w3id.org/gaia-x/development",
												"https://schema.org",
												"https://www.w3.org/ns/credentials/v2"
											],
											"entities": [
												{
													"id": "https://my-ds-connectors.example.org/ds-connector-ABCD",
													"type": [
														"DataSpaceConnector",
														"DataExchangeComponent"
													],
													"identity": "did:iota:testnet:123456",
													"defaultEndpoint": {
														"endpointURL": "https://my-twin-node.example.org:9000/twin-ds-connector"
													},
													"subscriptionActivityEndpoint": {
														"endpointURL": "/subscriptions"
													},
													"pushActivityEndpoint": {
														"endpointURL": "/notify"
													},
													"pullDataEndpoint": {
														"endpointURL": "/data"
													},
													"offeredResource": [
														"https://my-data-resource.example.org"
													],
													"trustedIssuerId": "did:iota:987654",
													"validFrom": "2024-08-01T12:00:00Z",
													"validUntil": "2025-08-01T12:00:00Z",
													"dateCreated": "2024-08-02T13:45:00Z",
													"evidences": [
														"https://credentials.example.org/1234567"
													]
												}
											],
											"cursor": "1"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The server cannot process the request, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "GeneralError",
											"message": "component.error",
											"properties": {
												"foo": "bar"
											}
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "You are not authorized to use the API or no credentials were supplied, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "UnauthorizedError",
											"message": "component.error"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "The server has encountered a situation it does not know how to handle, see the content for more details.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Error"
								},
								"examples": {
									"exampleResponse": {
										"value": {
											"name": "InternalServerError",
											"message": "component.error"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Address": {
				"type": "object",
				"properties": {
					"@context": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@id": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@included": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@graph": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdNodeObject"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdNodeObject"
								}
							}
						]
					},
					"@nest": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdJsonObject"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdJsonObject"
								}
							}
						]
					},
					"@type": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
								}
							}
						]
					},
					"@reverse": {
						"type": "object",
						"additionalProperties": {
							"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
						}
					},
					"@index": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"type": {
						"type": "string",
						"const": "Address",
						"description": "JSON-LD @ type. In this case it is allowed to be omitted as it is usually a child node."
					},
					"countryCode": {
						"type": [
							"string",
							"number"
						],
						"description": "Country code in ISO 3166-1 alpha2, alpha-3 or numeric format"
					}
				},
				"required": [
					"countryCode"
				],
				"additionalProperties": {
					"anyOf": [
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdNodePrimitive"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdLanguageMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIndexMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIncludedBlock"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIdMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdTypeMap"
						},
						{
							"type": "array"
						}
					]
				},
				"description": "Address as defined by Gaia-X https://docs.gaia-x.eu/ontology/development/classes/Address/"
			},
			"CompliancePresentationRequest": {
				"type": "string",
				"description": "The data to be used in the create."
			},
			"DataResourceListResponse": {
				"type": "object",
				"properties": {
					"@context": {
						"anyOf": [
							{
								"type": "string",
								"const": "https://w3id.org/gaia-x/development"
							},
							{
								"type": "array",
								"minItems": 1,
								"items": [
									{
										"type": "string",
										"const": "https://w3id.org/gaia-x/development"
									}
								],
								"additionalItems": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdContextDefinitionElement"
								}
							}
						],
						"description": "The LD"
					},
					"entities": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Omit%3CIDataResourceEntry%2C%22%40context%22%3E"
						},
						"description": "The entities, which can be partial if a limited keys list was provided."
					},
					"cursor": {
						"type": "string",
						"description": "An optional cursor, when defined can be used to call find to get more entities."
					}
				},
				"required": [
					"@context",
					"entities"
				],
				"additionalProperties": false,
				"description": "The response payload."
			},
			"DataSpaceConnectorListResponse": {
				"type": "object",
				"properties": {
					"@context": {
						"type": "array",
						"minItems": 1,
						"items": [
							{
								"type": "string",
								"const": "https://w3id.org/gaia-x/development"
							}
						],
						"additionalItems": {
							"$ref": "https://schema.twindev.org/json-ld/JsonLdContextDefinitionElement"
						},
						"description": "The LD"
					},
					"entities": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Omit%3CIDataSpaceConnectorEntry%2C%22%40context%22%3E"
						},
						"description": "The entities, which can be partial if a limited keys list was provided."
					},
					"cursor": {
						"type": "string",
						"description": "An optional cursor, when defined can be used to call find to get more entities."
					}
				},
				"required": [
					"@context",
					"entities"
				],
				"additionalProperties": false,
				"description": "The response payload."
			},
			"Error": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "The name for the error."
					},
					"message": {
						"type": "string",
						"description": "The message for the error."
					},
					"source": {
						"type": "string",
						"description": "The source of the error."
					},
					"properties": {
						"type": "object",
						"additionalProperties": {},
						"description": "Any additional information for the error."
					},
					"stack": {
						"type": "string",
						"description": "The stack trace for the error."
					},
					"inner": {
						"$ref": "#/components/schemas/Error"
					}
				},
				"required": [
					"name",
					"message"
				],
				"additionalProperties": false,
				"description": "Model to describe serialized error."
			},
			"ParticipantEntry": {
				"type": "object",
				"additionalProperties": {
					"anyOf": [
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdNodePrimitive"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdLanguageMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIndexMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIncludedBlock"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIdMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdTypeMap"
						},
						{
							"type": "array"
						}
					]
				},
				"properties": {
					"trustedIssuerId": {
						"type": "string",
						"description": "The trusted issuer of the compliance credential"
					},
					"validFrom": {
						"type": "string",
						"description": "Valid from (as per W3C VC Data Model v2)"
					},
					"validUntil": {
						"type": "string",
						"description": "Valid until (as per W3C VC Data Model v2)"
					},
					"dateCreated": {
						"type": "string",
						"description": "The creation date."
					},
					"evidences": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"description": "The evidences concerning the data resource."
					},
					"@context": {
						"anyOf": [
							{
								"type": "string",
								"const": "https://w3id.org/gaia-x/development"
							},
							{
								"type": "array",
								"minItems": 1,
								"items": [
									{
										"type": "string",
										"const": "https://w3id.org/gaia-x/development"
									}
								],
								"additionalItems": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdContextDefinitionElement"
								}
							}
						],
						"description": "The LD context"
					},
					"@id": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@included": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@graph": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdNodeObject"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdNodeObject"
								}
							}
						]
					},
					"@nest": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdJsonObject"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdJsonObject"
								}
							}
						]
					},
					"@type": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
								}
							}
						]
					},
					"@reverse": {
						"type": "object",
						"additionalProperties": {
							"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
						}
					},
					"@index": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"id": {
						"type": "string",
						"description": "The participant Id."
					},
					"type": {
						"type": "string",
						"const": "LegalPerson",
						"description": "JSON-LD type."
					},
					"registrationNumber": {
						"$ref": "#/components/schemas/RegistrationNumber"
					},
					"legalName": {
						"type": "string",
						"description": "The legal name."
					},
					"legalAddress": {
						"$ref": "#/components/schemas/Address"
					}
				},
				"required": [
					"@context",
					"dateCreated",
					"evidences",
					"id",
					"legalAddress",
					"legalName",
					"registrationNumber",
					"trustedIssuerId",
					"type",
					"validFrom",
					"validUntil"
				],
				"description": "Interface describing a participant."
			},
			"ParticipantListResponse": {
				"type": "object",
				"properties": {
					"@context": {
						"anyOf": [
							{
								"type": "string",
								"const": "https://w3id.org/gaia-x/development"
							},
							{
								"type": "array",
								"minItems": 1,
								"items": [
									{
										"type": "string",
										"const": "https://w3id.org/gaia-x/development"
									}
								],
								"additionalItems": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdContextDefinitionElement"
								}
							}
						],
						"description": "The LD"
					},
					"entities": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Omit%3CIParticipantEntry%2C%22%40context%22%3E"
						},
						"description": "The entities, which can be partial if a limited keys list was provided."
					},
					"cursor": {
						"type": "string",
						"description": "An optional cursor, when defined can be used to call find to get more entities."
					}
				},
				"required": [
					"@context",
					"entities"
				],
				"additionalProperties": false,
				"description": "The response payload."
			},
			"RegistrationNumber": {
				"type": "object",
				"properties": {
					"@context": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@id": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@included": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"@graph": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdNodeObject"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdNodeObject"
								}
							}
						]
					},
					"@nest": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdJsonObject"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdJsonObject"
								}
							}
						]
					},
					"@type": {
						"anyOf": [
							{
								"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
							},
							{
								"type": "array",
								"items": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
								}
							}
						]
					},
					"@reverse": {
						"type": "object",
						"additionalProperties": {
							"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
						}
					},
					"@index": {
						"$ref": "https://schema.twindev.org/json-ld/JsonLdKeyword"
					},
					"type": {
						"type": "string",
						"enum": [
							"RegistrationNumber",
							"LocalRegistrationNumber",
							"EORI",
							"EUID",
							"LeiCode",
							"TaxID",
							"VatID"
						],
						"description": "JSON-LD Type."
					},
					"local": {
						"type": "string",
						"description": "Local Registration."
					},
					"countryCode": {
						"type": "string",
						"description": "Country code. See https://docs.gaia-x.eu/ontology/development/enums/CountryNameAlpha2/"
					},
					"subdivisionCountryCode": {
						"type": "string",
						"description": "Subdivision country code. See https://docs.gaia-x.eu/ontology/development/enums/RegionCode/"
					},
					"vatID": {
						"type": "string",
						"description": "The VAT identification number."
					},
					"leiCode": {
						"type": "string",
						"description": "Unique LEI number as defined by GLEIF."
					},
					"eori": {
						"type": "string",
						"description": "The Economic Operators Registration and Identification number (EORI)."
					},
					"country": {
						"type": "string",
						"description": "The country where the EORI is registered written in plain english"
					},
					"euid": {
						"type": "string",
						"description": "The European Unique Identifier (EUID) for business located in the European Ec."
					},
					"taxId": {
						"type": "string",
						"description": "The company tax ID."
					}
				},
				"required": [
					"type"
				],
				"additionalProperties": {
					"anyOf": [
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdNodePrimitive"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdLanguageMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIndexMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIncludedBlock"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdIdMap"
						},
						{
							"$ref": "https://schema.twindev.org/json-ld/JsonLdTypeMap"
						},
						{
							"type": "array"
						}
					]
				},
				"description": "Registration Number as defined by the Gaia-X ontology. https://docs.gaia-x.eu/ontology/development/classes/RegistrationNumber/"
			},
			"ServiceOfferingListResponse": {
				"type": "object",
				"properties": {
					"@context": {
						"anyOf": [
							{
								"type": "string",
								"const": "https://w3id.org/gaia-x/development"
							},
							{
								"type": "array",
								"minItems": 1,
								"items": [
									{
										"type": "string",
										"const": "https://w3id.org/gaia-x/development"
									}
								],
								"additionalItems": {
									"$ref": "https://schema.twindev.org/json-ld/JsonLdContextDefinitionElement"
								}
							}
						],
						"description": "The LD"
					},
					"entities": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Omit%3CIServiceOfferingEntry%2C%22%40context%22%3E"
						},
						"description": "The entities, which can be partial if a limited keys list was provided."
					},
					"cursor": {
						"type": "string",
						"description": "An optional cursor, when defined can be used to call find to get more entities."
					}
				},
				"required": [
					"@context",
					"entities"
				],
				"additionalProperties": false,
				"description": "The response payload."
			}
		},
		"securitySchemes": {
			"jwtBearerAuthScheme": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
